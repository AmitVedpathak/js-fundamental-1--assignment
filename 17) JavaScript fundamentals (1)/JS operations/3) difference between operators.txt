In JavaScript, operators are symbols that perform operations on operands. The number of operands an operator takes determines its arity. Here are the different types of arities:

1) Unary Operators:
	Operate on a single operand.
Example:
let x = 5;
let y = -x; // Unary minus operator
In this example, the - is a unary operator that negates the value of x.

2) Binary Operators:
	Operate on two operands.
Examples:
let a = 5;
let b = 10;
let sum = a + b; // Binary plus operator
let product = a * b; // Binary multiplication operator

In these examples, + and * are binary operators that operate on two operands.

3) Ternary Operator:
	The only ternary operator in JavaScript is the conditional (ternary) operator ?:.It takes three operands and is often used as a shorthand for an if-else statement.

Syntax:
	let result = (condition) ? valueIfTrue : valueIfFalse;
Example:
let age = 20;
let beverage = (age >= 21) ? "Beer" : "Juice";

In this example, if the condition (age >= 21) is true, the variable beverage will be assigned the value "Beer"; otherwise, it will be assigned "Juice".

In summary:

Unary operators work on a single operand.
Binary operators work on two operands.
Ternary operators work on three operands and are often used for conditional expressions.